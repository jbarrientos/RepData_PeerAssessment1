egtwd)=
getwd()
x <- rnorm(1000)
mean(x)
x
mean(x)
x <- rnorm(10)
mean(x)
x
x <- 11:30
x
x <- 11:300
x
x <- 0/0
x
x <- c(0.5,0.6)
x
x <- c(T, F)
x
x <- 9:29
x
x <- c(1+0i, 2+4i)
x
x <- vector("numeric", length = 20)
x
y <- c(1.7, "A")
y
m <- matrix(nrow = 3, ncol = 4)
m
dim(m)
m <- matrix(1:12, nrow = 3, ncol = 4)
m
m <- 1:20
dim(m) <- c(2,5)
dim(m) <- c(4,5)
m
x <- 1:3
y <- 10:12
cbind(x,y)
rbind(x,y)
x <- list(1, "a", TRUE, 1 + 4i)
x
x <- vector("list", length = 5)
x
y <- factor(c("yes", "yes", "no", "yes", "yes"))
y
x <- factor(c("male","female","female","male","female"))
x
table(x)
table(y)
unclass(x)
attr(, "levels")
class(x)
x <- data.frame(foo = 1:4, bar = c(T,T,F,F))
x
x <- 1:3
names(x)
names(x) <- c("New York", "Seattle", "Los Angleles")
names(x)
x <- list("Los Angeles" = 1, Boston = 2, London = 3)
names(x)
x
m <- matrix(1:4, nrow = 2, ncol = 2)
dimnames(m) <- list(c("a","b"), c("c","d"))
dimnames(m)
m
colnames(m) <- c("h","f")
rownames(m) <- c("x","z")
m
?read.table
setwd("c:/users/jbarr/desktop/coursera/r")
getwd()
print("Hello World")
1+2
a <- c(1:10)
b <- c('Hola','Como','Estas?')
getwd()
print('First Line')
print('Second Line')
print('Second Line')
source('C:/Users/jbarr/Desktop/coursera/r/demo.R')
print('Second Line')
print('First Line')
1+100
5 -3
2/3
2^3
4^4
5 /2
5 %% 2
10 %% 8
45 / 22
45 %% 22
variable <- 100
bank <- 1000
a <- 2.34
class(a)
a <- 2.34
a <- T
a <- t
a <- 'hello'
a <- "hello"
class(a)
nvec <- c(1,2,3,4,5)
class(nvec)
cvec <- c("U","S","A")
class(cvec)
lvec <- c(T,F)
lvec
v <- c(F,20,30)
v
v <- c(T,20,30)
v
v1 <- c(1,2,3)
v2 <- c(5,6,7)
v1 + v2
v1 / v2
sum(v1,v2)
mean(v1)
mean(v2)
sd(v1)
sd(v2)
prod(v1,v2)
prod(v1)
prod(v2)
v1 <- c(100,200,300)
v2 <- c('a','b','c')
v1 <- c(100,200,300)
v2 <- c('a','b','c')
v <- c(1:4)
names(v) <- c('a','b','c','d')
v
v>2
v[v>2]
my.filter <- v>2
v[my.filter]
my.filter
help('vectors')
help('vector')
??numeric
??vector
?numeric
?vector
v <- c(1:5)
v
v < 2
v == 3
v2 <- c(10,20,30,40,50)
v < v2
2^5
stock.prices <- c(23,27,23,21,34)
stock.prices
names(stock.prices) <- c('Mon','Tue','Wed','Thu','Fri')
stock.prices
mean(stock.prices)
over.23 <- stock.prices > 23
over.23
stock.prices[over.23]
max(stock.prices)
source('C:/Users/jbarr/Desktop/coursera/r/demo.R')
source('C:/Users/jbarr/Desktop/coursera/r/demo.R')
source('C:/Users/jbarr/Desktop/coursera/r/demo.R')
source('C:/Users/jbarr/Desktop/coursera/r/demo.R')
source('C:/Users/jbarr/Desktop/coursera/r/demo.R')
source('C:/Users/jbarr/Desktop/coursera/r/demo.R')
source('C:/Users/jbarr/Desktop/coursera/r/demo.R')
source('C:/Users/jbarr/Desktop/coursera/r/demo.R')
getwd()
mat <- matrix(1:125, byrow=TRUE, nrow = 5)
mat
mat
str(mat)
mat <- matrix(1:125, byrow=TRUE, nrow = 5)
summary(mat)
head(mat)
mat <- matrix(1:25, byrow=TRUE, nrow = 5)
head(mat)
mat * 2
mat / 2
mat^2
1/mat
mat > 15
mat[mat > 15]
mat + mat
mat/mat
mat * mat
mat
mat * mat
mat %*% mat
source('C:/Users/jbarr/Desktop/coursera/r/demo.R')
colSums(stock.matrix)
rowsu(stock.matrix)
rowsum(stock.matrix)
rowsums(stock.matrix)
rowSums(stock.matrix)
rowMeans(stock.matrix)
colMeans(stock.matrix)
FB <- c(111,112,113,120,145)
tech.stoks <- rbind(stock.matrix, FB)
tech.stoks
rowMeans(tech.stoks)
colMeans(tech.stoks)
avg <- rowMeans(tech.stoks)
avg
tech.stoks <- cbind(tech.stoks, avg)
tech.stoks
v <- c(1:5)
v
v[2]
mat <- matrix(1:50, byrow = TRUE, nrow = 5)
mat
mat[1,]
mat[2,]
mat[,1]
mat[,3]
mat[1:3,]
mat[1:3,1:3]
mat[,9:10]
mat[2:3,5:6]
mat[5,3:5]
animal <- c('d','c','d','c','c')
animal
id <- 1:5
id
factor(animal)
fact.ani <- factor(animal)
fact.ani
ord.cat <- c('cold','med','hot')
temps <- c('cold','med','hot','hot','hot','cold','med')
temps
temps
fact.temp <- factor(temps, ordered = TRUE, levels = c('cold','med','hot'))
fact.temp
table(fact.temp)
summary(fact.temp)
summary(temps)
savehistory("C:/Users/jbarr/Desktop/coursera/r/bootcamp/factor.R")
a <- 1:3
b <- 4:6
c <- rbind(a,b)
c
mat <- matrix(1:9, nrow = 3, ncol = 3)
mat
is.matrix(mat)
mat2 <- matrix(1:5, nrow = 5, ncol = 5, byrow = TRUE)
mat2
mat2 <- matrix(1:25, nrow = 5, ncol = 5, byrow = TRUE)
mat2
mat2[2:3,2:3]
mat2[4:5,4:5]
sum(mat2)
runif(10, min=1,max=100)
mat3 <- matrix(runif(20, min = 1, max = 100), nrow = 4, ncol = 5)
mat3
mat3 <- matrix(runif(20), nrow = 4, ncol = 5)
mat3
savehistory("C:/Users/jbarr/Desktop/coursera/r/bootcamp/matrix.Rhistory")
sum(mat3)
sum(mat2[4:5,4:5])
rowSums(mat2)
state.abb
state.x77
states <- state.x77
names(states)
states
colnames(states)
table(states$Income)
table(states)
USPersonalExpenditure
women
data()
WorldPhones
head(states)
tail(states)
str(states)
summary(states)
days <- c('Mon','Tue','Wed','Thu','Fri')
temp <- c(22.2,21,23,24.3,25)
rain <- c(T,T,F,F,T)
data.frame(days,temp,rain)
df <- data.frame(days,temp,rain)
df
str(df)
summary(df)
df
df[1]
df[1,]
df[,1]
df[,'temp']
df[,'rain']
df[1:5, c('days','temp')]
state.abb
state.area
state.name
states <- cbin(state.abb, state.name, state.area)
states <- cbind(state.abb, state.name, state.area)
states
df$days
subset(df, subset = rain == TRUE)
subset(df, subset = temp < 21)
subset(df, subset = temp < 23)
sorted.temp <- order(df['temp'])
sorted.temp
df[sorted.temp]
df[sorted.temp,]
desc.temp <- order(-df['temp'])
df[sorted.temp,]
df[desc.temp,]
desc.temp <- order(-df$temp)
df[desc.temp,]
empty <- data.frame()
c1 <- 1:10
c2 <- letters
c2
c2 <- letters[1:10]
c2
df <- data.frame(col.name.1 = c1, col.name.2 = c2)
df
df <- data.frame(c1, c2)
df
df <- data.frame(col.name.1 = c1, col.name.2 = c2)
df
write.csv(df, file = 'saved_df.csv')
df2 <- read.csv('saved_df.csv')
df2
nrow(df)
ncol(df)
colnames(df)
rownames(df)
summary(df)
str(df)
df[[5,2]]
df[[5,'col.name.2']]
df[[2,'col.name.1']] <- 9999
df
df[1,]
mtcars
head(mtcars)
mtcars[,'mpg']
mtcars[,1]
mtcars[['mpg']]
mtcars$mpg
mtcars[mpg]
mtcars['mpg']
mtcars[c('mpg','cyl')]
head(mtcars[c('mpg','cyl')])
df2 <- data.frame(col.name.1 = 2000, col.name.2 = 'new')
df2
dfnew <- rbind(df, df2)
dfnew
df$newcol <- 2 * df$col.name.1
df
activitiesOK
library(ggplot2)
if(!file.exists("./activity.csv") && file.exists("./activity.zip")){
unzip("./activity.zip")
}else if(!file.exists("./activity.zip")){
stop("activity.zip file does not exists.")
}
activities <- read.csv("./activity.csv")
activities$time <- as.POSIXct(sprintf("%04d", activities$interval), format = "%H%M")
activities$asDate <- as.Date(activities$date, format = "%Y-%m-%d")
getwd()
if(!file.exists("./activity.csv") && file.exists("./activity.zip")){
unzip("./activity.zip")
}else if(!file.exists("./activity.zip")){
stop("activity.zip file does not exists.")
}
activities <- read.csv("./activity.csv")
activities$time <- as.POSIXct(sprintf("%04d", activities$interval), format = "%H%M")
activities$asDate <- as.Date(activities$date, format = "%Y-%m-%d")
getwd()
setwd("C:\Users\jbarr\Desktop\coursera\r\projects\reproducibleResearch\pj1\RepData_PeerAssessment1")
setwd("C:/Users/jbarr/Desktop/coursera/r/projects/reproducibleResearch/pj1/RepData_PeerAssessment1")
if(!file.exists("./activity.csv") && file.exists("./activity.zip")){
unzip("./activity.zip")
}else if(!file.exists("./activity.zip")){
stop("activity.zip file does not exists.")
}
activities <- read.csv("./activity.csv")
activities$time <- as.POSIXct(sprintf("%04d", activities$interval), format = "%H%M")
activities$asDate <- as.Date(activities$date, format = "%Y-%m-%d")
nrow(activities[is.na(activities$steps),])
source("./functions.R")
## NA's lines
activitiesNAS <- activities[is.na(activities$steps),]
## Filled lines
activitiesFilled <- activities[!is.na(activities$steps),]
## Invoke funtion to get filled steps
activitiesFilled2 <- fill.na(activitiesFilled, activitiesNAS)
activitiesOK = rbind(activitiesFilled, activitiesFilled2)
activityDays <- ifelse(weekdays(activitiesOK$asDate) %in% c("Monday","Tuesday","Wednesday","Thursday","Friday"), yes = "Weekday", no = "Weekend")
activitiesOK$day <- activityDays
table(activitiesOK$day)
averagedActivitiesOK <- aggregate(steps ~ interval + day, data=activitiesOK, mean)
ggplot(averagedActivitiesOK, aes(interval, steps)) +
geom_line() +
facet_grid(day ~ .) +
xlab("5-minute interval") +
ylab("avarage number of steps")
ggplot(averagedActivitiesOK, aes(interval, steps)) +
geom_line() +
facet_grid(day ~ .) +
xlab("5 minutes interv.") +
ylab("AVG No. steps")
ggplot(averagedActivitiesOK, aes(interval, steps)) +
geom_line() +
facet_grid(day ~ .) +
xlab("5 minutes interv.") +
ylab("AVG No. steps") + theme_bw()
ggplot(averagedActivitiesOK, aes(interval, steps)) +
geom_line() + geom=c("point", "smooth")+
facet_grid(day ~ .) +
xlab("5 minutes interv.") +
ylab("AVG No. steps") + theme_bw()
ggplot(averagedActivitiesOK, aes(interval, steps), geom=c("point", "smooth")) +
geom_line() +
facet_grid(day ~ .) +
xlab("5 minutes interv.") +
ylab("AVG No. steps") + theme_bw()
ggplot(averagedActivitiesOK, aes(interval, steps)) +
geom_line() +
facet_grid(day ~ .) +
xlab("5 minutes interv.") +
ylab("AVG No. steps") + theme_bw()
ggplot(averagedActivitiesOK,aes(x=interval,y=steps))+geom_point()+facet_wrap(~type)
ggplot(averagedActivitiesOK,aes(x=interval,y=steps))+geom_point()+facet_wrap(~days)
ggplot(averagedActivitiesOK,aes(x=interval,y=steps))+geom_point()+facet_wrap(~day)
ggplot(averagedActivitiesOK,aes(x=interval,y=steps))+geom_point()+facet_wrap(~day) + geom_line()
ggplot(averagedActivitiesOK,aes(x=interval,y=steps))+geom_point()+facet_wrap(~day) + geom_line() + theme_bw()
ggplot(averagedActivitiesOK,aes(x=interval,y=steps))+geom_point()+facet_wrap(~day) + geom_line() + theme_bw() + xlab("5 Min. Interv.") + ylab("AVG No. Steps")
ggplot(averagedActivitiesOK,aes(x=interval,y=steps, col=day))+geom_point()+facet_wrap(~day) + geom_line() + theme_bw() + xlab("5 Min. Interv.") + ylab("AVG No. Steps")
